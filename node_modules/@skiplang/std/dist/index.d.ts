import type { T } from "./internal.js";
export type { Opaque } from "./internal.js";
export declare const skpointer: unique symbol;
export interface Pointer<InternalType extends T<any>> {
    [skpointer]: InternalType;
}
export declare const sknative: unique symbol;
export interface NativeStub {
    [sknative]: string;
}
export type float = number;
export type int = number;
/**
 * Potentially `null` values.
 *
 * The type `Nullable<T>` of potentially `null` values of type `T`.
 */
export type Nullable<T> = T | null;
export declare const sk_isObjectProxy: unique symbol;
export declare function cloneIfProxy<T>(v: T): T;
//# sourceMappingURL=index.d.ts.map