import type { int } from "@skiplang/std";
import type { FileSystem, System } from "./sk_types.js";
import { Options } from "./sk_types.js";
export declare class MemFS implements FileSystem {
    private readonly fileDescrs;
    private fileDescrNbr;
    private readonly files;
    constructor();
    exists(filename: string): boolean;
    openFile(filename: string, options: Options, _mode: int): number;
    watchFile(filename: string, f: (change: string) => void): void;
    writeToFile(fd: int, content: string): void;
    appendToFile(filename: string, content: string): void;
    closeFile(fd: int): void;
    write(fd: int, content: string): number;
    read(fd: int, len: int): string | null;
}
export declare class MemSys implements System {
    private readonly env;
    constructor();
    setenv(name: string, value: string): void;
    getenv(name: string): string | null;
    unsetenv(name: string): void;
}
//# sourceMappingURL=sk_mem_utils.d.ts.map