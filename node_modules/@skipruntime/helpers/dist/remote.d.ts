import type { Entry, ExternalService, Json } from "@skipruntime/api";
import type { Entrypoint } from "./rest.js";
/**
 * An external Skip reactive service.
 *
 * `SkipExternalService` provides an implementation of `ExternalService` for an external Skip service.
 */
export declare class SkipExternalService implements ExternalService {
    private readonly url;
    private readonly control_url;
    private readonly resources;
    /**
     * @param url - URL to use for the service's streaming interface.
     * @param control_url - URL to use for the service's control interface.
     */
    constructor(url: string, control_url: string);
    /**
     * Constructor accepting an `Entrypoint`.
     *
     * @param entrypoint - The entry point for the external Skip service.
     * @returns An `ExternalService` to interact with the service running at `entrypoint`.
     */
    static direct(entrypoint: Entrypoint): SkipExternalService;
    subscribe(resource: string, params: Json, callbacks: {
        update: (updates: Entry<Json, Json>[], isInitial: boolean) => void;
        error: (error: Json) => void;
        loading: () => void;
    }): void;
    unsubscribe(resource: string, params: Json): void;
    shutdown(): void;
    private toId;
}
//# sourceMappingURL=remote.d.ts.map