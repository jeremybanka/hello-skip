import type { ptr, Links, Utils, ToWasmManager, Environment, Nullable, Shared, Pointer } from "@skip-wasm/std";
import type * as Internal from "@skipruntime/core/internal.js";
import type { Reducer, SkipService, Mapper, LazyCompute, ExternalService, Resource, Watermark } from "@skipruntime/api";
import { ServiceInstance, type JSONLazyCompute, type JSONMapper } from "@skipruntime/core";
import type { Checker, FromBinding, Handle, ResourceBuilder, Notifier } from "@skipruntime/core/binding.js";
import type { Json } from "@skiplang/json";
export interface FromWasm {
    SkipRuntime_NonEmptyIterator__first(values: ptr<Internal.NonEmptyIterator>): ptr<Internal.CJSON>;
    SkipRuntime_NonEmptyIterator__uniqueValue(values: ptr<Internal.NonEmptyIterator>): Nullable<ptr<Internal.CJSON>>;
    SkipRuntime_NonEmptyIterator__next(values: ptr<Internal.NonEmptyIterator>): Nullable<ptr<Internal.CJSON>>;
    SkipRuntime_NonEmptyIterator__clone(values: ptr<Internal.NonEmptyIterator>): ptr<Internal.NonEmptyIterator>;
    SkipRuntime_createMapper<K1 extends Json, V1 extends Json, K2 extends Json, V2 extends Json>(ref: Handle<Mapper<K1, V1, K2, V2>>): ptr<Internal.Mapper>;
    SkipRuntime_createLazyCompute<K extends Json, V extends Json>(ref: Handle<LazyCompute<K, V>>): ptr<Internal.LazyCompute>;
    SkipRuntime_createExternalService(ref: Handle<ExternalService>): ptr<Internal.ExternalService>;
    SkipRuntime_CollectionWriter__update(name: ptr<Internal.String>, values: ptr<Internal.CJArray<Internal.CJArray<Internal.CJSON>>>, isInit: boolean): Handle<Error>;
    SkipRuntime_CollectionWriter__error(name: ptr<Internal.String>, error: ptr<Internal.CJSON>): Handle<Error>;
    SkipRuntime_CollectionWriter__loading(name: ptr<Internal.String>): Handle<Error>;
    SkipRuntime_createResource(ref: Handle<Resource>): ptr<Internal.Resource>;
    SkipRuntime_createResourceBuilder(ref: Handle<ResourceBuilder>): ptr<Internal.ResourceBuilder>;
    SkipRuntime_createService(ref: Handle<SkipService>, jsInputs: ptr<Internal.CJObject>, resources: ptr<Internal.ResourceBuilderMap>, remotes: ptr<Internal.ExternalServiceMap>): ptr<Internal.Service>;
    SkipRuntime_ResourceBuilderMap__create(): ptr<Internal.ResourceBuilderMap>;
    SkipRuntime_ResourceBuilderMap__add(map: ptr<Internal.ResourceBuilderMap>, key: ptr<Internal.String>, collection: ptr<Internal.ResourceBuilder>): void;
    SkipRuntime_ExternalServiceMap__create(): ptr<Internal.ExternalServiceMap>;
    SkipRuntime_ExternalServiceMap__add(map: ptr<Internal.ExternalServiceMap>, key: ptr<Internal.String>, collection: ptr<Internal.ExternalService>): void;
    SkipRuntime_Collection__getArray(collection: ptr<Internal.String>, key: ptr<Internal.CJSON>): ptr<Internal.CJArray<Internal.CJSON>>;
    SkipRuntime_Collection__getUnique(collection: ptr<Internal.String>, key: ptr<Internal.CJSON>): Nullable<ptr<Internal.CJSON>>;
    SkipRuntime_Collection__map(collection: ptr<Internal.String>, mapper: ptr<Internal.Mapper>): ptr<Internal.String>;
    SkipRuntime_Collection__mapReduce(collection: ptr<Internal.String>, mapper: ptr<Internal.Mapper>, reducer: ptr<Internal.Reducer>): ptr<Internal.String>;
    SkipRuntime_Collection__nativeMapReduce(collection: ptr<Internal.String>, mapper: ptr<Internal.Mapper>, reducer: ptr<Internal.String>): ptr<Internal.String>;
    SkipRuntime_Collection__reduce(collection: ptr<Internal.String>, reducer: ptr<Internal.Reducer>): ptr<Internal.String>;
    SkipRuntime_Collection__nativeReduce(collection: ptr<Internal.String>, reducer: ptr<Internal.String>): ptr<Internal.String>;
    SkipRuntime_Collection__slice(collection: ptr<Internal.String>, range: ptr<Internal.CJArray<Internal.CJArray<Internal.CJSON>>>): ptr<Internal.String>;
    SkipRuntime_Collection__take(collection: ptr<Internal.String>, limit: bigint): ptr<Internal.String>;
    SkipRuntime_Collection__merge(collection: ptr<Internal.String>, others: ptr<Internal.CJArray<Internal.CJString>>): ptr<Internal.String>;
    SkipRuntime_Collection__size(collection: ptr<Internal.String>): bigint;
    SkipRuntime_LazyCollection__getArray(collection: ptr<Internal.String>, key: ptr<Internal.CJSON>): ptr<Internal.CJArray<Internal.CJSON>>;
    SkipRuntime_LazyCollection__getUnique(collection: ptr<Internal.String>, key: ptr<Internal.CJSON>): ptr<Internal.CJSON>;
    SkipRuntime_createNotifier<K extends Json, V extends Json>(notifier: Handle<Notifier<K, V>>): ptr<Internal.Notifier>;
    SkipRuntime_Runtime__createResource(identifier: ptr<Internal.String>, resource: ptr<Internal.String>, params: ptr<Internal.CJSON>): Handle<Error>;
    SkipRuntime_Runtime__getAll(resource: ptr<Internal.String>, params: ptr<Internal.CJSON>, request: ptr<Internal.Request> | null): ptr<Internal.CJObject | Internal.CJFloat>;
    SkipRuntime_Runtime__getForKey(resource: ptr<Internal.String>, params: ptr<Internal.CJSON>, key: ptr<Internal.CJSON>, request: ptr<Internal.Request> | null): ptr<Internal.CJObject | Internal.CJFloat>;
    SkipRuntime_Runtime__closeResource(identifier: ptr<Internal.String>): Handle<Error>;
    SkipRuntime_Runtime__subscribe(collection: ptr<Internal.String>, notifier: ptr<Internal.Notifier>, watermark: Nullable<ptr<Internal.String>>): bigint;
    SkipRuntime_Runtime__unsubscribe(id: bigint): Handle<Error>;
    SkipRuntime_Runtime__update(input: ptr<Internal.String>, values: ptr<Internal.CJArray<Internal.CJArray<Internal.CJSON>>>): Handle<Error>;
    SkipRuntime_createReducer<K1 extends Json, V1 extends Json>(ref: Handle<Reducer<K1, V1>>, defaultValue: ptr<Internal.CJSON>): ptr<Internal.Reducer>;
    SkipRuntime_initService(service: ptr<Internal.Service>): Handle<Error>;
    SkipRuntime_closeService(): Handle<Error>;
    SkipRuntime_Context__createLazyCollection(compute: ptr<Internal.LazyCompute>): ptr<Internal.String>;
    SkipRuntime_Context__jsonExtract(from: ptr<Internal.CJObject>, pattern: ptr<Internal.String>): ptr<Internal.CJArray>;
    SkipRuntime_Context__useExternalResource(service: ptr<Internal.String>, identifier: ptr<Internal.String>, params: ptr<Internal.CJSON>): ptr<Internal.String>;
    SkipRuntime_createIdentifier(supplier: ptr<Internal.String>): ptr<Internal.Request>;
    SkipRuntime_createChecker(ref: Handle<Checker>): ptr<Internal.Request>;
}
export declare class WasmFromBinding implements FromBinding {
    private utils;
    private fromWasm;
    constructor(utils: Utils, fromWasm: FromWasm);
    SkipRuntime_NonEmptyIterator__first(values: Pointer<Internal.NonEmptyIterator>): Pointer<Internal.CJSON>;
    SkipRuntime_NonEmptyIterator__uniqueValue(values: Pointer<Internal.NonEmptyIterator>): Nullable<Pointer<Internal.CJSON>>;
    SkipRuntime_NonEmptyIterator__next(values: Pointer<Internal.NonEmptyIterator>): Nullable<Pointer<Internal.CJSON>>;
    SkipRuntime_NonEmptyIterator__clone(values: Pointer<Internal.NonEmptyIterator>): Pointer<Internal.NonEmptyIterator>;
    SkipRuntime_createMapper<K1 extends Json, V1 extends Json, K2 extends Json, V2 extends Json>(ref: Handle<Mapper<K1, V1, K2, V2>>): Pointer<Internal.Mapper>;
    SkipRuntime_createLazyCompute<K extends Json, V extends Json>(ref: Handle<LazyCompute<K, V>>): Pointer<Internal.LazyCompute>;
    SkipRuntime_createExternalService(ref: Handle<ExternalService>): Pointer<Internal.ExternalService>;
    SkipRuntime_CollectionWriter__update(name: string, values: Pointer<Internal.CJArray<Internal.CJArray<Internal.CJSON>>>, isInit: boolean): Handle<Error>;
    SkipRuntime_CollectionWriter__error(name: string, error: Pointer<Internal.CJSON>): Handle<Error>;
    SkipRuntime_CollectionWriter__loading(name: string): Handle<Error>;
    SkipRuntime_createResource(ref: Handle<Resource>): Pointer<Internal.Resource>;
    SkipRuntime_createResourceBuilder(ref: Handle<ResourceBuilder>): Pointer<Internal.ResourceBuilder>;
    SkipRuntime_createService(ref: Handle<SkipService>, jsInputs: Pointer<Internal.CJObject>, resources: Pointer<Internal.ResourceBuilderMap>, remotes: Pointer<Internal.ExternalServiceMap>): Pointer<Internal.Service>;
    SkipRuntime_ResourceBuilderMap__create(): Pointer<Internal.ResourceBuilderMap>;
    SkipRuntime_ResourceBuilderMap__add(map: Pointer<Internal.ResourceBuilderMap>, key: string, collection: Pointer<Internal.ResourceBuilder>): void;
    SkipRuntime_ExternalServiceMap__create(): Pointer<Internal.ExternalServiceMap>;
    SkipRuntime_ExternalServiceMap__add(map: Pointer<Internal.ExternalServiceMap>, key: string, collection: Pointer<Internal.ExternalService>): void;
    SkipRuntime_Collection__getArray(collection: string, key: Pointer<Internal.CJSON>): Pointer<Internal.CJArray<Internal.CJSON>>;
    SkipRuntime_Collection__getUnique(collection: string, key: Pointer<Internal.CJSON>): Nullable<Pointer<Internal.CJSON>>;
    SkipRuntime_Collection__map(collection: string, mapper: Pointer<Internal.Mapper>): string;
    SkipRuntime_Collection__mapReduce(collection: string, mapper: Pointer<Internal.Mapper>, reducer: Pointer<Internal.Reducer>): string;
    SkipRuntime_Collection__nativeMapReduce(collection: string, mapper: Pointer<Internal.Mapper>, reducer: string): string;
    SkipRuntime_Collection__reduce(collection: string, reducer: Pointer<Internal.Reducer>): string;
    SkipRuntime_Collection__nativeReduce(collection: string, reducer: string): string;
    SkipRuntime_Collection__slice(collection: string, range: Pointer<Internal.CJArray<Internal.CJArray<Internal.CJSON>>>): string;
    SkipRuntime_Collection__take(collection: string, limit: bigint): string;
    SkipRuntime_Collection__merge(collection: string, others: Pointer<Internal.CJArray<Internal.CJString>>): string;
    SkipRuntime_Collection__size(collection: string): bigint;
    SkipRuntime_LazyCollection__getArray(collection: string, key: Pointer<Internal.CJSON>): Pointer<Internal.CJArray<Internal.CJSON>>;
    SkipRuntime_LazyCollection__getUnique(collection: string, key: Pointer<Internal.CJSON>): Pointer<Internal.CJSON>;
    SkipRuntime_createNotifier<K extends Json, V extends Json>(ref: Handle<Notifier<K, V>>): Pointer<Internal.Notifier>;
    SkipRuntime_Runtime__createResource(identifier: string, resource: string, params: Pointer<Internal.CJSON>): Handle<Error>;
    SkipRuntime_Runtime__getAll(resource: string, params: Pointer<Internal.CJSON>, request: Nullable<Pointer<Internal.Request>>): Pointer<Internal.CJObject | Internal.CJFloat>;
    SkipRuntime_Runtime__getForKey(resource: string, params: Pointer<Internal.CJSON>, key: Pointer<Internal.CJSON>, request: Pointer<Internal.Request> | null): Pointer<Internal.CJObject | Internal.CJFloat>;
    SkipRuntime_Runtime__closeResource(identifier: string): Handle<Error>;
    SkipRuntime_Runtime__subscribe(collection: string, notifier: Pointer<Internal.Notifier>, watermark: Nullable<string>): bigint;
    SkipRuntime_Runtime__unsubscribe(id: bigint): Handle<Error>;
    SkipRuntime_Runtime__update(input: string, values: Pointer<Internal.CJArray<Internal.CJArray<Internal.CJSON>>>): Handle<Error>;
    SkipRuntime_createReducer<K1 extends Json, V1 extends Json>(ref: Handle<Reducer<K1, V1>>, defaultValue: Pointer<Internal.CJSON>): Pointer<Internal.Reducer>;
    SkipRuntime_initService(service: Pointer<Internal.Service>): Handle<Error>;
    SkipRuntime_closeService(): Handle<Error>;
    SkipRuntime_Context__createLazyCollection(compute: Pointer<Internal.LazyCompute>): string;
    SkipRuntime_Context__jsonExtract(from: Pointer<Internal.CJObject>, pattern: string): Pointer<Internal.CJArray>;
    SkipRuntime_Context__useExternalResource(service: string, identifier: string, params: Pointer<Internal.CJSON>): string;
    SkipRuntime_createIdentifier(supplier: string): Pointer<Internal.Request>;
    SkipRuntime_createChecker(ref: Handle<Checker>): Pointer<Internal.Request>;
}
declare class LinksImpl implements Links {
    private readonly env;
    private tobinding;
    private utils;
    constructor(env: Environment);
    complete(utils: Utils, exports: object): void;
    getErrorHdl(exn: ptr<Internal.Exception>): Handle<Error>;
    pushContext(context: ptr<Internal.Context>): void;
    popContext(): void;
    getContext(): Nullable<ptr<Internal.Context>>;
    mapEntryOfMapper(skmapper: Handle<JSONMapper>, key: ptr<Internal.CJSON>, values: ptr<Internal.NonEmptyIterator>): ptr<Internal.CJArray>;
    deleteMapper(mapper: Handle<JSONMapper>): void;
    computeOfLazyCompute(sklazyCompute: Handle<JSONLazyCompute>, skself: ptr<Internal.String>, skkey: ptr<Internal.CJSON>): ptr<Internal.CJArray<Internal.CJSON<any, any>>>;
    deleteLazyCompute(lazyCompute: Handle<JSONLazyCompute>): void;
    instantiateOfResource(skresource: Handle<Resource>, skcollections: ptr<Internal.CJObject>): ptr<Internal.String>;
    deleteResource(resource: Handle<Resource>): void;
    buildOfResourceBuilder(skbuilder: Handle<ResourceBuilder>, skparams: ptr<Internal.CJSON>): ptr<Internal.Resource>;
    deleteResourceBuilder(builder: Handle<ResourceBuilder>): void;
    createGraphOfService(skservice: Handle<SkipService>, skcollections: ptr<Internal.CJObject>): ptr<Internal.CJObject>;
    deleteService(service: Handle<SkipService>): void;
    notifyOfNotifier<K extends Json, V extends Json>(sknotifier: Handle<Notifier<K, V>>, skvalues: ptr<Internal.CJArray<Internal.CJArray<Internal.CJSON>>>, watermark: Watermark, isUpdates: number): void;
    subscribedOfNotifier<K extends Json, V extends Json>(sknotifier: Handle<Notifier<K, V>>): void;
    closeOfNotifier<K extends Json, V extends Json>(sknotifier: Handle<Notifier<K, V>>): void;
    deleteNotifier<K extends Json, V extends Json>(notifier: Handle<Notifier<K, V>>): void;
    addOfReducer(skreducer: Handle<Reducer<Json, Json>>, skacc: ptr<Internal.CJSON>, skvalue: ptr<Internal.CJSON>): ptr<Internal.CJSON<any, any>>;
    removeOfReducer(skreducer: Handle<Reducer<Json, Json>>, skacc: ptr<Internal.CJSON>, skvalue: ptr<Internal.CJSON>): Nullable<ptr<Internal.CJSON<any, any>>>;
    deleteReducer(reducer: Handle<Reducer<Json, Json>>): void;
    subscribeOfExternalService(sksupplier: Handle<ExternalService>, skwriter: ptr<Internal.String>, skresource: ptr<Internal.String>, skparams: ptr<Internal.CJSON>): void;
    unsubscribeOfExternalService(sksupplier: Handle<ExternalService>, skresource: ptr<Internal.String>, skparams: ptr<Internal.CJSON>): void;
    shutdownOfExternalService(sksupplier: Handle<ExternalService>): void;
    deleteExternalService(supplier: Handle<ExternalService>): void;
    checkOfChecker(skchecker: Handle<Checker>, skrequest: ptr<Internal.String>): void;
    deleteChecker(checker: Handle<Checker>): void;
}
export declare class ServiceInstanceFactory implements Shared {
    private readonly init;
    constructor(init: (service: SkipService) => ServiceInstance);
    initService(service: SkipService): ServiceInstance;
    getName(): string;
}
declare class Manager implements ToWasmManager {
    private readonly env;
    constructor(env: Environment);
    prepare(wasm: object): LinksImpl;
}
export declare function init(env: Environment): Promise<Manager>;
export {};
//# sourceMappingURL=skipruntime_module.d.ts.map