import { ServiceInstance, ToBinding, } from "@skipruntime/core";
import { toPtr, toNullablePtr, toNullablePointer, SKJSONShared, } from "@skip-wasm/json";
export class WasmFromBinding {
    constructor(utils, fromWasm) {
        this.utils = utils;
        this.fromWasm = fromWasm;
    }
    SkipRuntime_NonEmptyIterator__first(values) {
        return this.fromWasm.SkipRuntime_NonEmptyIterator__first(toPtr(values));
    }
    SkipRuntime_NonEmptyIterator__uniqueValue(values) {
        return toNullablePointer(this.fromWasm.SkipRuntime_NonEmptyIterator__uniqueValue(toPtr(values)));
    }
    SkipRuntime_NonEmptyIterator__next(values) {
        return toNullablePointer(this.fromWasm.SkipRuntime_NonEmptyIterator__next(toPtr(values)));
    }
    SkipRuntime_NonEmptyIterator__clone(values) {
        return this.fromWasm.SkipRuntime_NonEmptyIterator__clone(toPtr(values));
    }
    SkipRuntime_createMapper(ref) {
        return this.fromWasm.SkipRuntime_createMapper(ref);
    }
    SkipRuntime_createLazyCompute(ref) {
        return this.fromWasm.SkipRuntime_createLazyCompute(ref);
    }
    SkipRuntime_createExternalService(ref) {
        return this.fromWasm.SkipRuntime_createExternalService(ref);
    }
    SkipRuntime_CollectionWriter__update(name, values, isInit) {
        return this.fromWasm.SkipRuntime_CollectionWriter__update(this.utils.exportString(name), toPtr(values), isInit);
    }
    SkipRuntime_CollectionWriter__error(name, error) {
        return this.fromWasm.SkipRuntime_CollectionWriter__error(this.utils.exportString(name), toPtr(error));
    }
    SkipRuntime_CollectionWriter__loading(name) {
        return this.fromWasm.SkipRuntime_CollectionWriter__loading(this.utils.exportString(name));
    }
    SkipRuntime_createResource(ref) {
        return this.fromWasm.SkipRuntime_createResource(ref);
    }
    SkipRuntime_createResourceBuilder(ref) {
        return this.fromWasm.SkipRuntime_createResourceBuilder(ref);
    }
    SkipRuntime_createService(ref, jsInputs, resources, remotes) {
        return this.fromWasm.SkipRuntime_createService(ref, toPtr(jsInputs), toPtr(resources), toPtr(remotes));
    }
    SkipRuntime_ResourceBuilderMap__create() {
        return this.fromWasm.SkipRuntime_ResourceBuilderMap__create();
    }
    SkipRuntime_ResourceBuilderMap__add(map, key, collection) {
        this.fromWasm.SkipRuntime_ResourceBuilderMap__add(toPtr(map), this.utils.exportString(key), toPtr(collection));
    }
    SkipRuntime_ExternalServiceMap__create() {
        return this.fromWasm.SkipRuntime_ExternalServiceMap__create();
    }
    SkipRuntime_ExternalServiceMap__add(map, key, collection) {
        this.fromWasm.SkipRuntime_ExternalServiceMap__add(toPtr(map), this.utils.exportString(key), toPtr(collection));
    }
    SkipRuntime_Collection__getArray(collection, key) {
        return this.fromWasm.SkipRuntime_Collection__getArray(this.utils.exportString(collection), toPtr(key));
    }
    SkipRuntime_Collection__getUnique(collection, key) {
        return toNullablePointer(this.fromWasm.SkipRuntime_Collection__getUnique(this.utils.exportString(collection), toPtr(key)));
    }
    SkipRuntime_Collection__map(collection, mapper) {
        return this.utils.importString(this.fromWasm.SkipRuntime_Collection__map(this.utils.exportString(collection), toPtr(mapper)));
    }
    SkipRuntime_Collection__mapReduce(collection, mapper, reducer) {
        return this.utils.importString(this.fromWasm.SkipRuntime_Collection__mapReduce(this.utils.exportString(collection), toPtr(mapper), toPtr(reducer)));
    }
    SkipRuntime_Collection__nativeMapReduce(collection, mapper, reducer) {
        return this.utils.importString(this.fromWasm.SkipRuntime_Collection__nativeMapReduce(this.utils.exportString(collection), toPtr(mapper), this.utils.exportString(reducer)));
    }
    SkipRuntime_Collection__reduce(collection, reducer) {
        return this.utils.importString(this.fromWasm.SkipRuntime_Collection__reduce(this.utils.exportString(collection), toPtr(reducer)));
    }
    SkipRuntime_Collection__nativeReduce(collection, reducer) {
        return this.utils.importString(this.fromWasm.SkipRuntime_Collection__nativeReduce(this.utils.exportString(collection), this.utils.exportString(reducer)));
    }
    SkipRuntime_Collection__slice(collection, range) {
        return this.utils.importString(this.fromWasm.SkipRuntime_Collection__slice(this.utils.exportString(collection), toPtr(range)));
    }
    SkipRuntime_Collection__take(collection, limit) {
        return this.utils.importString(this.fromWasm.SkipRuntime_Collection__take(this.utils.exportString(collection), limit));
    }
    SkipRuntime_Collection__merge(collection, others) {
        return this.utils.importString(this.fromWasm.SkipRuntime_Collection__merge(this.utils.exportString(collection), toPtr(others)));
    }
    SkipRuntime_Collection__size(collection) {
        return this.fromWasm.SkipRuntime_Collection__size(this.utils.exportString(collection));
    }
    SkipRuntime_LazyCollection__getArray(collection, key) {
        return this.fromWasm.SkipRuntime_LazyCollection__getArray(this.utils.exportString(collection), toPtr(key));
    }
    SkipRuntime_LazyCollection__getUnique(collection, key) {
        return this.fromWasm.SkipRuntime_LazyCollection__getUnique(this.utils.exportString(collection), toPtr(key));
    }
    SkipRuntime_createNotifier(ref) {
        return this.fromWasm.SkipRuntime_createNotifier(ref);
    }
    SkipRuntime_Runtime__createResource(identifier, resource, params) {
        return this.fromWasm.SkipRuntime_Runtime__createResource(this.utils.exportString(identifier), this.utils.exportString(resource), toPtr(params));
    }
    SkipRuntime_Runtime__getAll(resource, params, request) {
        return this.fromWasm.SkipRuntime_Runtime__getAll(this.utils.exportString(resource), toPtr(params), toNullablePtr(request));
    }
    SkipRuntime_Runtime__getForKey(resource, params, key, request) {
        return this.fromWasm.SkipRuntime_Runtime__getForKey(this.utils.exportString(resource), toPtr(params), toPtr(key), toNullablePtr(request));
    }
    SkipRuntime_Runtime__closeResource(identifier) {
        return this.fromWasm.SkipRuntime_Runtime__closeResource(this.utils.exportString(identifier));
    }
    SkipRuntime_Runtime__subscribe(collection, notifier, watermark) {
        return this.fromWasm.SkipRuntime_Runtime__subscribe(this.utils.exportString(collection), toPtr(notifier), watermark ? this.utils.exportString(watermark) : null);
    }
    SkipRuntime_Runtime__unsubscribe(id) {
        return this.fromWasm.SkipRuntime_Runtime__unsubscribe(id);
    }
    SkipRuntime_Runtime__update(input, values) {
        return this.fromWasm.SkipRuntime_Runtime__update(this.utils.exportString(input), toPtr(values));
    }
    SkipRuntime_createReducer(ref, defaultValue) {
        return this.fromWasm.SkipRuntime_createReducer(ref, toPtr(defaultValue));
    }
    SkipRuntime_initService(service) {
        return this.fromWasm.SkipRuntime_initService(toPtr(service));
    }
    SkipRuntime_closeService() {
        return this.fromWasm.SkipRuntime_closeService();
    }
    SkipRuntime_Context__createLazyCollection(compute) {
        return this.utils.importString(this.fromWasm.SkipRuntime_Context__createLazyCollection(toPtr(compute)));
    }
    SkipRuntime_Context__jsonExtract(from, pattern) {
        return this.fromWasm.SkipRuntime_Context__jsonExtract(toPtr(from), this.utils.exportString(pattern));
    }
    SkipRuntime_Context__useExternalResource(service, identifier, params) {
        return this.utils.importString(this.fromWasm.SkipRuntime_Context__useExternalResource(this.utils.exportString(service), this.utils.exportString(identifier), toPtr(params)));
    }
    SkipRuntime_createIdentifier(supplier) {
        return this.fromWasm.SkipRuntime_createIdentifier(this.utils.exportString(supplier));
    }
    SkipRuntime_createChecker(ref) {
        return this.fromWasm.SkipRuntime_createChecker(ref);
    }
}
class LinksImpl {
    constructor(env) {
        this.env = env;
    }
    complete(utils, exports) {
        this.utils = utils;
        const fromBinding = new WasmFromBinding(utils, exports);
        this.tobinding = new ToBinding(fromBinding, utils.runWithGc.bind(utils), () => this.env.shared.get("SKJSON").converter, (skExc) => this.utils.getErrorObject(toPtr(skExc)));
        this.env.shared.set("ServiceInstanceFactory", new ServiceInstanceFactory(this.tobinding.initService.bind(this.tobinding)));
    }
    //
    getErrorHdl(exn) {
        return this.tobinding.SkipRuntime_getErrorHdl(exn);
    }
    pushContext(context) {
        this.tobinding.SkipRuntime_pushContext(context);
    }
    popContext() {
        this.tobinding.SkipRuntime_popContext();
    }
    getContext() {
        return toNullablePtr(this.tobinding.SkipRuntime_getContext());
    }
    // Mapper
    mapEntryOfMapper(skmapper, key, values) {
        return toPtr(this.tobinding.SkipRuntime_Mapper__mapEntry(skmapper, key, values));
    }
    deleteMapper(mapper) {
        this.tobinding.SkipRuntime_deleteMapper(mapper);
    }
    // LazyCompute
    computeOfLazyCompute(sklazyCompute, skself, skkey) {
        return toPtr(this.tobinding.SkipRuntime_LazyCompute__compute(sklazyCompute, this.utils.importString(skself), skkey));
    }
    deleteLazyCompute(lazyCompute) {
        this.tobinding.SkipRuntime_deleteLazyCompute(lazyCompute);
    }
    // Resource
    instantiateOfResource(skresource, skcollections) {
        return this.utils.exportString(this.tobinding.SkipRuntime_Resource__instantiate(skresource, skcollections));
    }
    deleteResource(resource) {
        this.tobinding.SkipRuntime_deleteResource(resource);
    }
    // ResourceBuilder
    buildOfResourceBuilder(skbuilder, skparams) {
        return toPtr(this.tobinding.SkipRuntime_ResourceBuilder__build(skbuilder, skparams));
    }
    deleteResourceBuilder(builder) {
        this.tobinding.SkipRuntime_deleteResourceBuilder(builder);
    }
    // Service
    createGraphOfService(skservice, skcollections) {
        return toPtr(this.tobinding.SkipRuntime_Service__createGraph(skservice, skcollections));
    }
    deleteService(service) {
        this.tobinding.SkipRuntime_deleteService(service);
    }
    // Notifier
    notifyOfNotifier(sknotifier, skvalues, watermark, isUpdates) {
        this.tobinding.SkipRuntime_Notifier__notify(sknotifier, skvalues, watermark, isUpdates);
    }
    subscribedOfNotifier(sknotifier) {
        this.tobinding.SkipRuntime_Notifier__subscribed(sknotifier);
    }
    closeOfNotifier(sknotifier) {
        this.tobinding.SkipRuntime_Notifier__close(sknotifier);
    }
    deleteNotifier(notifier) {
        this.tobinding.SkipRuntime_deleteNotifier(notifier);
    }
    // Reducer
    addOfReducer(skreducer, skacc, skvalue) {
        return toPtr(this.tobinding.SkipRuntime_Reducer__add(skreducer, skacc, skvalue));
    }
    removeOfReducer(skreducer, skacc, skvalue) {
        return toNullablePtr(this.tobinding.SkipRuntime_Reducer__remove(skreducer, skacc, skvalue));
    }
    deleteReducer(reducer) {
        this.tobinding.SkipRuntime_deleteReducer(reducer);
    }
    // ExternalService
    subscribeOfExternalService(sksupplier, skwriter, skresource, skparams) {
        this.tobinding.SkipRuntime_ExternalService__subscribe(sksupplier, this.utils.importString(skwriter), this.utils.importString(skresource), skparams);
    }
    unsubscribeOfExternalService(sksupplier, skresource, skparams) {
        this.tobinding.SkipRuntime_ExternalService__unsubscribe(sksupplier, this.utils.importString(skresource), skparams);
    }
    shutdownOfExternalService(sksupplier) {
        this.tobinding.SkipRuntime_ExternalService__shutdown(sksupplier);
    }
    deleteExternalService(supplier) {
        this.tobinding.SkipRuntime_deleteExternalService(supplier);
    }
    // Checker
    checkOfChecker(skchecker, skrequest) {
        this.tobinding.SkipRuntime_Checker__check(skchecker, this.utils.importString(skrequest));
    }
    deleteChecker(checker) {
        this.tobinding.SkipRuntime_deleteChecker(checker);
    }
}
export class ServiceInstanceFactory {
    constructor(init) {
        this.init = init;
    }
    initService(service) {
        return this.init(service);
    }
    getName() {
        return "ServiceInstanceFactory";
    }
}
class Manager {
    constructor(env) {
        this.env = env;
    }
    //
    prepare(wasm) {
        const links = new LinksImpl(this.env);
        const toWasm = wasm;
        //
        toWasm.SkipRuntime_getErrorHdl = links.getErrorHdl.bind(links);
        toWasm.SkipRuntime_pushContext = links.pushContext.bind(links);
        toWasm.SkipRuntime_popContext = links.popContext.bind(links);
        toWasm.SkipRuntime_getContext = links.getContext.bind(links);
        // Mapper
        toWasm.SkipRuntime_Mapper__mapEntry = links.mapEntryOfMapper.bind(links);
        toWasm.SkipRuntime_deleteMapper = links.deleteMapper.bind(links);
        // LazyCompute
        toWasm.SkipRuntime_LazyCompute__compute =
            links.computeOfLazyCompute.bind(links);
        toWasm.SkipRuntime_deleteLazyCompute = links.deleteLazyCompute.bind(links);
        // ExternalService
        toWasm.SkipRuntime_ExternalService__unsubscribe =
            links.unsubscribeOfExternalService.bind(links);
        toWasm.SkipRuntime_ExternalService__subscribe =
            links.subscribeOfExternalService.bind(links);
        toWasm.SkipRuntime_ExternalService__shutdown =
            links.shutdownOfExternalService.bind(links);
        toWasm.SkipRuntime_deleteExternalService =
            links.deleteExternalService.bind(links);
        // Resource
        toWasm.SkipRuntime_Resource__instantiate =
            links.instantiateOfResource.bind(links);
        toWasm.SkipRuntime_deleteResource = links.deleteResource.bind(links);
        // ResourceBuilder
        toWasm.SkipRuntime_ResourceBuilder__build =
            links.buildOfResourceBuilder.bind(links);
        toWasm.SkipRuntime_deleteResourceBuilder =
            links.deleteResourceBuilder.bind(links);
        // Service
        toWasm.SkipRuntime_Service__createGraph =
            links.createGraphOfService.bind(links);
        toWasm.SkipRuntime_deleteService = links.deleteService.bind(links);
        // Notifier
        toWasm.SkipRuntime_Notifier__subscribed =
            links.subscribedOfNotifier.bind(links);
        toWasm.SkipRuntime_Notifier__notify = links.notifyOfNotifier.bind(links);
        toWasm.SkipRuntime_Notifier__close = links.closeOfNotifier.bind(links);
        toWasm.SkipRuntime_deleteNotifier = links.deleteNotifier.bind(links);
        // Reducer
        toWasm.SkipRuntime_Reducer__add = links.addOfReducer.bind(links);
        toWasm.SkipRuntime_Reducer__remove = links.removeOfReducer.bind(links);
        toWasm.SkipRuntime_deleteReducer = links.deleteReducer.bind(links);
        // Checker
        toWasm.SkipRuntime_Checker__check = links.checkOfChecker.bind(links);
        toWasm.SkipRuntime_deleteChecker = links.deleteChecker.bind(links);
        return links;
    }
}
/* @sk init */
export function init(env) {
    return Promise.resolve(new Manager(env));
}
//# sourceMappingURL=skipruntime_module.js.map