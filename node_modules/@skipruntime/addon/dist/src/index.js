import { ServiceInstance, ToBinding } from "@skipruntime/core";
import { buildJsonConverter, } from "@skiplang/json";
import { createRequire } from "node:module";
const require = createRequire(import.meta.url);
const skip_runtime = require("../../build/Release/skip_runtime.node");
const jsonBinding = skip_runtime.getJsonBinding();
const jsonConverter = buildJsonConverter(jsonBinding);
const fromBinding = skip_runtime.getSkipRuntimeFromBinding();
const tobinding = new ToBinding(fromBinding, skip_runtime.runWithGC, () => jsonConverter, skip_runtime.getErrorObject);
export function initService(service) {
    skip_runtime.initSkipRuntimeToBinding(tobinding);
    try {
        return Promise.resolve(tobinding.initService(service));
    }
    catch (e) {
        return Promise.reject(e);
    }
}
//# sourceMappingURL=index.js.map