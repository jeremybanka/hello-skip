"use strict";
var _a, _b, _c, _d;
Object.defineProperty(exports, "__esModule", { value: true });
exports.Count = exports.Max = exports.Min = exports.Sum = void 0;
var std_1 = require("@skiplang/std");
/**
 * `Reducer` to maintain the sum of input values.
 *
 * A `Reducer` that maintains the sum of values as they are added and removed from a collection.
 */
var Sum = /** @class */ (function () {
    function Sum() {
        this[_a] = "sum";
    }
    return Sum;
}());
exports.Sum = Sum;
_a = std_1.sknative;
/**
 * `Reducer` to maintain the minimum of input values.
 *
 * A `Reducer` that maintains the minimum of values as they are added and removed from a collection.
 */
var Min = /** @class */ (function () {
    function Min() {
        this[_b] = "min";
    }
    return Min;
}());
exports.Min = Min;
_b = std_1.sknative;
/**
 * `Reducer` to maintain the maximum of input values.
 *
 * A `Reducer` that maintains the maximum of values as they are added and removed from a collection.
 */
var Max = /** @class */ (function () {
    function Max() {
        this[_c] = "max";
    }
    return Max;
}());
exports.Max = Max;
_c = std_1.sknative;
/**
 * `Reducer` to maintain the count of input values.
 *
 * A `Reducer` that maintains the number of values as they are added and removed from a collection.
 */
var Count = /** @class */ (function () {
    function Count() {
        this[_d] = "count";
    }
    return Count;
}());
exports.Count = Count;
_d = std_1.sknative;
